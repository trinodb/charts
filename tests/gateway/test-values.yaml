replicaCount: 1

image:
  # -- Repository location of the Trino Gateway image, typically `organization/imagename`
  repository: "trinodb/trino-gateway"
  pullPolicy: IfNotPresent

config:
  serverConfig:
    node.environment: test
    http-server.http.port: 8080
  dataStore:
    # The connection details for the backend database for Trino Gateway and Trino query history
    jdbcUrl: jdbc:postgresql://gateway-backend-db-postgresql.postgres-gateway.svc.cluster.local:5432/gateway
    user: gateway
    password: pass0000
    driver: org.postgresql.Driver
  clusterStatsConfiguration:
    monitorType: INFO_API

initContainers:
  - name: wait-for-service
    image: busybox:1.28
    imagePullPolicy: IfNotPresent
    command: ['sh', '-c', "until nslookup {{ .Values.serviceName }}.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]

ingress:
  enabled: true

resources:
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 250m
    memory: 256Mi

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/instance
              operator: In
              values:
                - "{{ .Release.Name }}"
        topologyKey: "kubernetes.io/hostname"
