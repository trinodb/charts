# Default values for trino.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  # -- Repository location of the Trino Gateway image, typically `organization/imagename`
  repository: "trinodb/trino-gateway"
  pullPolicy: IfNotPresent
  # -- Override the image tag whose default is the chart appVersion.
  tag: ""

# -- An optional list of references to secrets in the same namespace to use for pulling images.
# @raw
# Example:
# ```yaml
# imagePullSecrets:
#   - name: registry-credentials
# ```
imagePullSecrets: []

# -- A list of secrets and configmaps to mount into the init container as environment variables.
# @raw
# Example:
# ```yaml
# envFrom:
#   - secretRef:
#       name: password-secret
# ```
envFrom: []

config:
  serverConfig:
    node.environment: test
    http-server.http.port: 8080
    http-server.http.enabled: true
  dataStore:
    # -- The connection details for the backend database for Trino Gateway and Trino query history
    jdbcUrl: jdbc:postgresql://localhost:5432/gateway
    user: postgres
    password: mysecretpassword
    driver: org.postgresql.Driver
  clusterStatsConfiguration:
    monitorType: INFO_API

# -- Startup command for Trino Gateway process. Add additional Java options and other modifications as desired.
command:
  - "java"
  - "-XX:MinRAMPercentage=80.0"
  - "-XX:MaxRAMPercentage=80.0"
  - "-jar"
  - "/usr/lib/trino-gateway/gateway-ha-jar-with-dependencies.jar"
  - "/etc/trino-gateway/config.yaml"

# -- Service for accessing the gateway. The contents of this dictionary are used
#  for the [service spec](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport).
# The `port` and `targetPort` of the first element
# of the ports list will automatically be set to the value of
# `config.serverConfig."http-server.http[s].port"`. If both https and http ports are defined
# the https port is used. In this case, an additional service for the http port must be
# configured manually. Additional ports, such as for JMX or a Java Agent
# can be configured by adding elements to the ports list. The selector is
# also automatically configured. All other values are passed through as is.
#
# Example configuration for exposing both https and http:
# @raw
# ```yaml
#  service:
#    type: NodePort
#    ports:
#      - protocol: TCP
#        name: request
#        nodePort: 30443
#        # targetPort and port will automatically pulled from serverConfig.http-server.https.port
#      - protocol: TCP
#        name: gateway-http
#        nodePort: 30080
#        port: 8080
#        # targetPort must be explicitly set to the same value as serverConfig.http-server.http.port
#        targetPort: 8080
# ```

service:
  type: ClusterIP
  ports:
    - protocol: TCP
      name: gateway

# -- Set a custom name for the gateway service
serviceName: trino-gateway

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # ingress.hosts -- [Ingress
  # rules](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules).
  # @raw
  # Example:
  # ```yaml
  #  - host: trino.example.com
  #    paths:
  #      - path: /
  #        pathType: ImplementationSpecific
  # ```
  tls: []
  # ingress.tls -- Ingress
  # [TLS](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls)
  # configuration.
  # @raw
  # Example:
  # ```yaml
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  # ```

resources:
  limits:
    cpu: 2
    memory: 4Gi
  requests:
    cpu: 2
    memory: 4Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  # -- Target average CPU utilization, represented as a percentage of requested CPU. To disable scaling based on CPU,
  # set to an empty string.
  targetCPUUtilizationPercentage: 80
  # -- Target average memory utilization, represented as a percentage of requested memory. To disable scaling
  # based on memory, set to an empty string.
  targetMemoryUtilizationPercentage: ""

livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  failureThreshold: 3
  timeoutSeconds: 1
  scheme: HTTP

readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 12
  timeoutSeconds: 1
  scheme: HTTP

volumes: {}

volumeMounts: {}

nodeSelector: {}

tolerations: []

affinity: {}

# -- Labels that get applied to every resource's metadata
commonLabels: {}

podAnnotations: {}

podLabels: {}

# -- [Pod security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod) configuration.
# To remove the default, set it to null (or `~`).
podSecurityContext: {}

securityContext: {}
# securityContext -- [Container security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container) configuration.
# @raw
# Example:
# ```yaml
#  capabilities:
#    drop:
#    - ALL
#  readOnlyRootFilesystem: true
#  runAsNonRoot: true
# ```

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
