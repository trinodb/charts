{{- if gt (int .Values.server.workers) 0 }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "trino.worker" . }}
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
data:
  node.properties: |
    node.environment={{ .Values.server.node.environment }}
    node.data-dir={{ .Values.server.node.dataDir }}
    plugin.dir={{ .Values.server.node.pluginDir }}
  {{- range $configValue := .Values.additionalNodeProperties }}
    {{ $configValue }}
  {{- end }}

  jvm.config: |
    -server
    -Xmx{{ .Values.server.jvm.maxHeapSize }}
    -XX:+{{ .Values.server.jvm.gcMethod.type }}
    -XX:G1HeapRegionSize={{ .Values.server.jvm.gcMethod.g1.heapRegionSize }}
    -XX:+UseGCOverheadLimit
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -Djdk.attach.allowAttachSelf=true
    -XX:-UseBiasedLocking
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.nio.maxCachedBufferSize=2000000
  {{- range $configValue := .Values.additionalJVMConfig }}
    {{ $configValue }}
  {{- end }}

  config.properties: |
    coordinator=false
    http-server.http.port={{ .Values.server.config.http.port }}
    query.max-memory={{ .Values.server.config.query.maxMemory }}
    query.max-memory-per-node={{ .Values.server.config.query.maxMemoryPerNode }}
    query.max-memory={{ .Values.server.config.query.maxTotalMemory }}
    query.max-total-memory-per-node={{ .Values.server.config.query.maxTotalMemoryPerNode }}
    discovery.uri=http://{{ template "trino.fullname" . }}:{{ .Values.server.config.http.port }}

  log.properties: |
    io.trino={{ .Values.server.log.trino.level }}
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "trino.worker" . }}-health-check
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
data:
  health_check.sh: |
    #!/bin/bash
    curl -H 'X-trino-User: healthCheck' -m 3 --silent {{ template "trino.fullname" . }}:{{ .Values.server.config.http.port }}/v1/info/state | grep --silent 'ACTIVE'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: schemas-volume-worker
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
data:
  {{- range $key, $val := .Values.schemas }}
  {{ $key }}: {{ $val | quote }}
  {{- end }}

---
{{- end }}
