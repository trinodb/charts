apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "trino.coordinator" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: coordinator
    {{- if .Values.coordinator.labels }}
    {{- tpl (toYaml .Values.coordinator.labels) . | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "trino.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: coordinator
  template:
    metadata:
      annotations:
        checksum/catalog-config: {{ include (print $.Template.BasePath "/configmap-catalog.yaml") . | sha256sum }}
        checksum/coordinator-config: {{ include (print $.Template.BasePath "/configmap-coordinator.yaml") . | sha256sum }}
      {{- if .Values.coordinator.annotations }}
      {{- tpl (toYaml .Values.coordinator.annotations) . | nindent 8 }}
      {{- end }}

      labels:
        {{- include "trino.labels" . | nindent 8 }}
        app.kubernetes.io/component: coordinator
        {{- if .Values.coordinator.labels }}
        {{- tpl (toYaml .Values.coordinator.labels) . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "trino.serviceAccountName" . }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.shareProcessNamespace.coordinator }}
      shareProcessNamespace: {{ .Values.shareProcessNamespace.coordinator }}
      {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "trino.coordinator" . }}
        - name: catalog-volume
          configMap:
            name: {{ template "trino.catalog" . }}
        - name: schemas-volume
          configMap:
            name: {{ template "trino.fullname" . }}-schemas-volume-coordinator
        {{- if .Values.accessControl }}{{- if eq .Values.accessControl.type "configmap" }}
        - name: access-control-volume
          configMap:
            name: {{ template "trino.fullname" . }}-access-control-volume-coordinator
        {{- end }}{{- end }}
        {{- if .Values.resourceGroups }}
        - name: resource-groups-volume
          configMap:
            name: {{ template "trino.fullname" . }}-resource-groups-volume-coordinator
        {{- end }}
        {{- if or .Values.auth.passwordAuth .Values.auth.passwordAuthSecret .Values.auth.groups }}
        - name: file-authentication-volume
          secret:
            secretName: {{ template "trino.fileAuthSecretName" . }}
            items:
              {{- if or .Values.auth.passwordAuth .Values.auth.passwordAuthSecret }}
              - key: password.db
                path: password.db
              {{- end }}
              {{- if .Values.auth.groups }}
              - key: group.db
                path: group.db
              {{- end }}
        {{- end }}
        {{- if .Values.jmx.exporter.enabled }}
        - name: jmx-exporter-config-volume
          configMap:
            name: {{ template "trino.fullname" . }}-jmx-exporter-config
        {{- end }}
        {{- range .Values.configMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMap }}
        {{- end }}
        {{- range .Values.coordinator.configMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMap }}
        {{- end }}
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
        {{- range .Values.coordinator.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
        {{- with .Values.coordinator.additionalVolumes }}
        {{- . | toYaml | nindent 8 }}
        {{- end }}
      {{- if .Values.initContainers.coordinator }}
      initContainers:
      {{- tpl (toYaml .Values.initContainers.coordinator) . | nindent 6 }}
      {{- end }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.coordinator.terminationGracePeriodSeconds }}
      containers:
        - name: {{ .Chart.Name }}-coordinator
          image: {{ include "trino.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          envFrom:
            {{- toYaml .Values.envFrom | nindent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.server.config.path }}
              name: config-volume
            - mountPath: {{ .Values.server.config.path }}/catalog
              name: catalog-volume
            - mountPath: {{ .Values.kafka.mountPath }}
              name: schemas-volume
            {{- if .Values.accessControl }}{{- if eq .Values.accessControl.type "configmap" }}
            - mountPath: {{ .Values.server.config.path }}/access-control
              name: access-control-volume
            {{- end }}{{- end }}
            {{- if .Values.resourceGroups }}
            - mountPath: {{ .Values.server.config.path }}/resource-groups
              name: resource-groups-volume
            {{- end }}
            {{- range .Values.configMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
            {{- end }}
            {{- range .Values.coordinator.configMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
            {{- end }}
            {{- range .Values.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
            {{- end }}
            {{- range .Values.coordinator.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
            {{- end }}
            {{- if or .Values.auth.passwordAuth .Values.auth.passwordAuthSecret .Values.auth.groups }}
            - mountPath: {{ .Values.server.config.path }}/auth
              name: file-authentication-volume
            {{- end }}
            {{- with .Values.coordinator.additionalVolumeMounts }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            {{- if .Values.jmx.enabled }}
            - name: jmx-registry
              containerPort: {{ .Values.jmx.registryPort }}
              protocol: TCP
            - name: jmx-server
              containerPort: {{ .Values.jmx.serverPort }}
              protocol: TCP
            {{- end }}
            {{- if .Values.jmx.exporter.enabled }}
            - name: jmx-exporter
              containerPort: {{ .Values.jmx.exporter.port }}
              protocol: TCP
            {{- end }}
          {{- range $key, $value := .Values.coordinator.additionalExposedPorts }}
            - name: {{ $value.name }}
              containerPort: {{ $value.port }}
              protocol: {{ $value.protocol }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
            initialDelaySeconds: {{ .Values.coordinator.livenessProbe.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.coordinator.livenessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.coordinator.livenessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.coordinator.livenessProbe.failureThreshold | default 6 }}
            successThreshold: {{ .Values.coordinator.livenessProbe.successThreshold | default 1 }}
          readinessProbe:
            exec:
              command: [/usr/lib/trino/bin/health-check]
            initialDelaySeconds: {{ .Values.coordinator.readinessProbe.initialDelaySeconds | default 10 }}
            periodSeconds: {{ .Values.coordinator.readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.coordinator.readinessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.coordinator.readinessProbe.failureThreshold | default 6 }}
            successThreshold: {{ .Values.coordinator.readinessProbe.successThreshold | default 1 }}
          lifecycle:
            {{- toYaml .Values.coordinator.lifecycle | nindent 12 }}
          resources:
            {{- toYaml .Values.coordinator.resources | nindent 12 }}
      {{- if .Values.jmx.exporter.enabled }}
        - name: jmx-exporter
          image: {{ .Values.jmx.exporter.image }}
          imagePullPolicy: {{ .Values.jmx.exporter.pullPolicy }}
          {{- with .Values.jmx.exporter.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            - "{{ .Values.jmx.exporter.port }}"
            - /etc/jmx-exporter/jmx-exporter-config.yaml
          volumeMounts:
            - mountPath: /etc/jmx-exporter/
              name: jmx-exporter-config-volume
      {{- end }}
      {{- if .Values.sidecarContainers.coordinator }}
        {{- toYaml .Values.sidecarContainers.coordinator | nindent 8 }}
      {{- end }}
      {{- with .Values.coordinator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.coordinator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.coordinator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
