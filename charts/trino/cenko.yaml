---
# Source: trino/templates/secret.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: "catalogs"
data:
  mariadb.properties: 
    Y29ubmVjdG9yLm5hbWU9bWFyaWFkYgpjb25uZWN0aW9uLXVzZXI9CmNvbm5lY3Rpb24tdXJsPQpjb25uZWN0aW9uLXBhc3N3b3JkPQo=
  postgresql.properties: 
    Y29ubmVjdG9yLm5hbWU9cG9zdGdyZXNxbApjb25uZWN0aW9uLXVzZXI9CmNvbm5lY3Rpb24tdXJsPQpwb3N0Z3Jlc3FsLmFycmF5LW1hcHBpbmc9CmNvbm5lY3Rpb24tcGFzc3dvcmQ9Cg==
type: Opaque
---
# Source: trino/templates/configmap-coordinator.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-coordinator
  namespace: default
  labels:
    helm.sh/chart: trino-1.37.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "470"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: coordinator
data:
  node.properties: |
    node.environment=production
    node.data-dir=/data/trino
    plugin.dir=/usr/lib/trino/plugin

  jvm.config: |
    -server
    -agentpath:/usr/lib/trino/bin/libjvmkill.so
    -Xmx8G
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -XX:-OmitStackTraceInFastThrow
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.attach.allowAttachSelf=true
    -Djdk.nio.maxCachedBufferSize=2000000
    # Allow loading dynamic agent used by JOL
    -XX:+EnableDynamicAgentLoading
  
    # https://bugs.openjdk.org/browse/JDK-8329528
    -XX:+UnlockDiagnosticVMOptions
    -XX:G1NumCollectionsKeepPinned=10000000

  config.properties: |
    coordinator=true
    node-scheduler.include-coordinator=false
    http-server.http.port=8080
    query.max-memory=4GB
    query.max-memory-per-node=1GB
    discovery.uri=http://localhost:8080

  log.properties: |
    io.trino=INFO
---
# Source: trino/templates/configmap-coordinator.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-schemas-volume-coordinator
  namespace: default
  labels:
    helm.sh/chart: trino-1.37.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "470"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: coordinator
data:
---
# Source: trino/templates/configmap-worker.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-worker
  namespace: default
  labels:
    helm.sh/chart: trino-1.37.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "470"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: worker
data:
  node.properties: |
    node.environment=production
    node.data-dir=/data/trino
    plugin.dir=/usr/lib/trino/plugin

  jvm.config: |
    -server
    -agentpath:/usr/lib/trino/bin/libjvmkill.so
    -Xmx8G
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -XX:-OmitStackTraceInFastThrow
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.attach.allowAttachSelf=true
    -Djdk.nio.maxCachedBufferSize=2000000
    # Allow loading dynamic agent used by JOL
    -XX:+EnableDynamicAgentLoading
  
    # https://bugs.openjdk.org/browse/JDK-8329528
    -XX:+UnlockDiagnosticVMOptions
    -XX:G1NumCollectionsKeepPinned=10000000

  config.properties: |
    coordinator=false
    http-server.http.port=8080
    query.max-memory=4GB
    query.max-memory-per-node=1GB
    discovery.uri=http://release-name-trino:8080

  log.properties: |
    io.trino=INFO
---
# Source: trino/templates/configmap-worker.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-schemas-volume-worker
  namespace: default
  labels:
    helm.sh/chart: trino-1.37.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "470"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: worker
data:
---
# Source: trino/templates/service-coordinator.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-trino
  namespace: default
  labels:
    helm.sh/chart: trino-1.37.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "470"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: coordinator
  annotations:
    {}
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: coordinator
---
# Source: trino/templates/service-worker.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-trino-worker
  namespace: default
  labels:
    helm.sh/chart: trino-1.37.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "470"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: worker
  annotations:
    {}
spec:
  clusterIP: None
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: worker
---
# Source: trino/templates/deployment-coordinator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-trino-coordinator
  namespace: default
  labels:
    helm.sh/chart: trino-1.37.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "470"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: coordinator
    trino.io/network-policy-protection: disabled
  annotations:
    {}
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: trino
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: coordinator
  template:
    metadata:
      annotations:
        checksum/coordinator-config: 40751d21000a49da8ca8810cbffafd533666be33fdd78b1f93421fa9f5b37a6c

      labels:
        helm.sh/chart: trino-1.37.0
        app.kubernetes.io/name: trino
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "470"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: coordinator
        trino.io/network-policy-protection: disabled
    spec:
      serviceAccountName: default
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
      volumes:
        - name: config-volume
          configMap:
            name: release-name-trino-coordinator
        - name: schemas-volume
          configMap:
            name: release-name-trino-schemas-volume-coordinator
      terminationGracePeriodSeconds: 30
      containers:
        - name: trino-coordinator
          image: trinodb/trino:470
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          env:
            []
          envFrom:
            []
          volumeMounts:
            - mountPath: /etc/trino
              name: config-volume
            - mountPath: /etc/trino/schemas
              name: schemas-volume
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            exec:
              command: [/usr/lib/trino/bin/health-check]
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          lifecycle:
            {}
          resources:
            {}
---
# Source: trino/templates/deployment-worker.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-trino-worker
  namespace: default
  labels:
    helm.sh/chart: trino-1.37.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "470"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: worker
    trino.io/network-policy-protection: disabled
  annotations:
    {}
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: trino
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: worker
  template:
    metadata:
      annotations:
        checksum/worker-config: e580771155dcd8953af6dc546e698fd7af4c3b5510b489c6b4463bcec072dda7
      labels:
        helm.sh/chart: trino-1.37.0
        app.kubernetes.io/name: trino
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "470"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: worker
        trino.io/network-policy-protection: disabled
    spec:
      serviceAccountName: default
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
      volumes:
        - name: config-volume
          configMap:
            name: release-name-trino-worker
        - name: schemas-volume
          configMap:
            name: release-name-trino-schemas-volume-worker
      terminationGracePeriodSeconds: 30
      containers:
        - name: trino-worker
          image: trinodb/trino:470
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          env:
            []
          envFrom:
            []
          volumeMounts:
            - mountPath: /etc/trino
              name: config-volume
            - mountPath: /etc/trino/schemas
              name: schemas-volume
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            exec:
              command: [/usr/lib/trino/bin/health-check]
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          lifecycle:
          resources:
            {}
---
# Source: trino/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-trino-test-connection
  labels:
    helm.sh/chart: trino-1.37.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "470"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: test
    test: connection
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: cli
      image: trinodb/trino:470
      command: ['trino']
      args:
      - trino://release-name-trino:8080
      - --user=admin
      - --debug
      - --execute=SELECT COUNT(*) FROM tpch.tiny.nation
      - --no-progress
  restartPolicy: Never
